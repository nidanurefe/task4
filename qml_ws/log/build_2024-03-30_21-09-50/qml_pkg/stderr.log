[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/publisher_node.cpp:2:10:[m[K [01;31m[Kfatal error: [m[Kexample_interfaces/msg/string.hpp: No such file or directory
    2 | #include [01;31m[K"example_interfaces/msg/string.hpp"[m[K  // Fixed header include
      |          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
compilation terminated.
gmake[2]: *** [CMakeFiles/publisher_node.dir/build.make:76: CMakeFiles/publisher_node.dir/src/publisher_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/publisher_node.dir/all] Error 2
gmake[1]: *** Waiting for unfinished jobs....
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:[m[K In function â€˜[01m[Kvoid update_slider(QObject*)[m[Kâ€™:
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:15:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KQVariant::QVariant(std_msgs::msg::Int32&)[m[Kâ€™
   15 |     obj->setProperty("value", QVariant(SLIDER[01;31m[K)[m[K);
      |                                              [01;31m[K^[m[K
In file included from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qlocale.h:7[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qguiapplication.h:11[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/QGuiApplication:1[m[K,
                 from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:1[m[K:
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:314:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T, typename std::enable_if<disjunction_v<std::is_pointer<_Tp>, std::is_member_pointer<_Tp> >, bool>::type <anonymous> > QVariant::QVariant(T)[m[Kâ€™ (deleted)
  314 |     [01;36m[KQVariant[m[K(T) = delete;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:314:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:313:107:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, bool>[m[Kâ€™
  313 |               std::enable_if_t<std::disjunction_v<std::is_pointer<T>, std::is_member_pointer<T>>, bool> = [01;31m[Kfalse[m[K>
      |                                                                                                           [01;31m[K^~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:242:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T, class U, class ... Args, typename std::enable_if<conjunction_v<std::is_copy_constructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>, std::is_destructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>, std::is_constructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type, std::initializer_list<_Up>&, Args ...> >, bool>::type <anonymous> > QVariant::QVariant(std::in_place_type_t<_Tp>, std::initializer_list<_Up>, Args&& ...)[m[Kâ€™
  242 |     explicit [01;36m[KQVariant[m[K(std::in_place_type_t<T>, std::initializer_list<U> il, Args&&... args)
      |              [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:242:14:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:15:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::in_place_type_t<_Tp>[m[Kâ€™
   15 |     obj->setProperty("value", QVariant(SLIDER[01;36m[K)[m[K);
      |                                              [01;36m[K^[m[K
In file included from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qlocale.h:7[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qguiapplication.h:11[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/QGuiApplication:1[m[K,
                 from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:1[m[K:
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:232:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T, class ... Args, typename std::enable_if<conjunction_v<std::is_copy_constructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>, std::is_destructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>, std::is_constructible<typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type, Args ...> >, bool>::type <anonymous> > QVariant::QVariant(std::in_place_type_t<_Tp>, Args&& ...)[m[Kâ€™
  232 |     explicit [01;36m[KQVariant[m[K(std::in_place_type_t<T>, Args&&... args)
      |              [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:232:14:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:15:46:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™ is not derived from â€˜[01m[Kstd::in_place_type_t<_Tp>[m[Kâ€™
   15 |     obj->setProperty("value", QVariant(SLIDER[01;36m[K)[m[K);
      |                                              [01;36m[K^[m[K
In file included from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qlocale.h:7[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qguiapplication.h:11[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/QGuiApplication:1[m[K,
                 from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:1[m[K:
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:681:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(std::in_place_t, QMetaType)[m[Kâ€™
  681 |     [01;36m[KQVariant[m[K(std::in_place_t, QMetaType type);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:681:5:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:428:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QVariant::Type)[m[Kâ€™
  428 |     explicit [01;36m[KQVariant[m[K(Type type)
      |              [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:428:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQVariant::Type[m[Kâ€™
  428 |     explicit QVariant([01;36m[KType type[m[K)
      |                       [01;36m[K~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:332:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QVariant&&)[m[Kâ€™
  332 |     inline [01;36m[KQVariant[m[K(QVariant &&other) noexcept : d(other.d)
      |            [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:332:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQVariant&&[m[Kâ€™
  332 |     inline QVariant([01;36m[KQVariant &&other[m[K) noexcept : d(other.d)
      |                     [01;36m[K~~~~~~~~~~~^~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:308:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QLatin1StringView)[m[Kâ€™
  308 |     [01;36m[KQVariant[m[K(QLatin1StringView string) noexcept(false); // converts to QString
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:308:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQLatin1StringView[m[Kâ€™ {aka â€˜[01m[KQLatin1String[m[Kâ€™}
  308 |     QVariant([01;36m[KQLatin1StringView string[m[K) noexcept(false); // converts to QString
      |              [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:304:24:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const char*)[m[Kâ€™
  304 |     QT_ASCII_CAST_WARN [01;36m[KQVariant[m[K(const char *str) noexcept(false)
      |                        [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:304:45:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst char*[m[Kâ€™
  304 |     QT_ASCII_CAST_WARN QVariant([01;36m[Kconst char *str[m[K) noexcept(false)
      |                                 [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:301:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QPersistentModelIndex&)[m[Kâ€™
  301 |     [01;36m[KQVariant[m[K(const QPersistentModelIndex &modelIndex) noexcept(false);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:301:43:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QPersistentModelIndex&[m[Kâ€™
  301 |     QVariant([01;36m[Kconst QPersistentModelIndex &modelIndex[m[K) noexcept(false);
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:300:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QJsonDocument&)[m[Kâ€™
  300 |     [01;36m[KQVariant[m[K(const QJsonDocument &jsonDocument) noexcept(false);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:300:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QJsonDocument&[m[Kâ€™
  300 |     QVariant([01;36m[Kconst QJsonDocument &jsonDocument[m[K) noexcept(false);
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:299:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QEasingCurve&)[m[Kâ€™
  299 |     [01;36m[KQVariant[m[K(const QEasingCurve &easing) noexcept(false);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:299:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QEasingCurve&[m[Kâ€™
  299 |     QVariant([01;36m[Kconst QEasingCurve &easing[m[K) noexcept(false);
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:295:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QRectF)[m[Kâ€™
  295 |     [01;36m[KQVariant[m[K(QRectF rect) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 4>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:295:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQRectF[m[Kâ€™
  295 |     QVariant([01;36m[KQRectF rect[m[K) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 4>);
      |              [01;36m[K~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:294:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QRect)[m[Kâ€™
  294 |     [01;36m[KQVariant[m[K(QRect rect) noexcept(Private::FitsInInternalSize<sizeof(int) * 4>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:294:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQRect[m[Kâ€™
  294 |     QVariant([01;36m[KQRect rect[m[K) noexcept(Private::FitsInInternalSize<sizeof(int) * 4>);
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:293:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QLineF)[m[Kâ€™
  293 |     [01;36m[KQVariant[m[K(QLineF line) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 4>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:293:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQLineF[m[Kâ€™
  293 |     QVariant([01;36m[KQLineF line[m[K) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 4>);
      |              [01;36m[K~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:292:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QLine)[m[Kâ€™
  292 |     [01;36m[KQVariant[m[K(QLine line) noexcept(Private::FitsInInternalSize<sizeof(int) * 4>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:292:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQLine[m[Kâ€™
  292 |     QVariant([01;36m[KQLine line[m[K) noexcept(Private::FitsInInternalSize<sizeof(int) * 4>);
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:291:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QPointF)[m[Kâ€™
  291 |     [01;36m[KQVariant[m[K(QPointF pt) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 2>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:291:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQPointF[m[Kâ€™
  291 |     QVariant([01;36m[KQPointF pt[m[K) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 2>);
      |              [01;36m[K~~~~~~~~^~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:290:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QPoint)[m[Kâ€™
  290 |     [01;36m[KQVariant[m[K(QPoint pt) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:290:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQPoint[m[Kâ€™
  290 |     QVariant([01;36m[KQPoint pt[m[K) noexcept;
      |              [01;36m[K~~~~~~~^~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:289:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QSizeF)[m[Kâ€™
  289 |     [01;36m[KQVariant[m[K(QSizeF size) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 2>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:289:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQSizeF[m[Kâ€™
  289 |     QVariant([01;36m[KQSizeF size[m[K) noexcept(Private::FitsInInternalSize<sizeof(qreal) * 2>);
      |              [01;36m[K~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:288:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QSize)[m[Kâ€™
  288 |     [01;36m[KQVariant[m[K(QSize size) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:288:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQSize[m[Kâ€™
  288 |     QVariant([01;36m[KQSize size[m[K) noexcept;
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:286:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QUuid)[m[Kâ€™
  286 |     [01;36m[KQVariant[m[K(QUuid uuid) noexcept(Private::FitsInInternalSize<16>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:286:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQUuid[m[Kâ€™
  286 |     QVariant([01;36m[KQUuid uuid[m[K) noexcept(Private::FitsInInternalSize<16>);
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:285:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QModelIndex&)[m[Kâ€™
  285 |     [01;36m[KQVariant[m[K(const QModelIndex &modelIndex) noexcept(Private::FitsInInternalSize<8 + 2 * sizeof(quintptr)>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:285:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QModelIndex&[m[Kâ€™
  285 |     QVariant([01;36m[Kconst QModelIndex &modelIndex[m[K) noexcept(Private::FitsInInternalSize<8 + 2 * sizeof(quintptr)>);
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:284:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QJsonValue&)[m[Kâ€™
  284 |     [01;36m[KQVariant[m[K(const QJsonValue &jsonValue) noexcept(Private::FitsInInternalSize<sizeof(CborValueStandIn)>);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:284:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QJsonValue&[m[Kâ€™
  284 |     QVariant([01;36m[Kconst QJsonValue &jsonValue[m[K) noexcept(Private::FitsInInternalSize<sizeof(CborValueStandIn)>);
      |              [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:280:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QUrl&)[m[Kâ€™
  280 |     [01;36m[KQVariant[m[K(const QUrl &url) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:280:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QUrl&[m[Kâ€™
  280 |     QVariant([01;36m[Kconst QUrl &url[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:279:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QStringList&)[m[Kâ€™
  279 |     [01;36m[KQVariant[m[K(const QStringList &stringlist) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:279:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QStringList&[m[Kâ€™ {aka â€˜[01m[Kconst QList<QString>&[m[Kâ€™}
  279 |     QVariant([01;36m[Kconst QStringList &stringlist[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:278:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QString&)[m[Kâ€™
  278 |     [01;36m[KQVariant[m[K(const QString &string) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:278:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QString&[m[Kâ€™
  278 |     QVariant([01;36m[Kconst QString &string[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:277:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QRegularExpression&)[m[Kâ€™
  277 |     [01;36m[KQVariant[m[K(const QRegularExpression &re) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:277:40:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QRegularExpression&[m[Kâ€™
  277 |     QVariant([01;36m[Kconst QRegularExpression &re[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:276:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QMap<QString, QVariant>&)[m[Kâ€™
  276 |     [01;36m[KQVariant[m[K(const QMap<QString, QVariant> &map) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:276:45:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QMap<QString, QVariant>&[m[Kâ€™
  276 |     QVariant([01;36m[Kconst QMap<QString, QVariant> &map[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:275:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QLocale&)[m[Kâ€™
  275 |     [01;36m[KQVariant[m[K(const QLocale &locale) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:275:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QLocale&[m[Kâ€™
  275 |     QVariant([01;36m[Kconst QLocale &locale[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:274:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QList<QVariant>&)[m[Kâ€™
  274 |     [01;36m[KQVariant[m[K(const QList<QVariant> &list) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:274:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QList<QVariant>&[m[Kâ€™
  274 |     QVariant([01;36m[Kconst QList<QVariant> &list[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:273:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QJsonObject&)[m[Kâ€™
  273 |     [01;36m[KQVariant[m[K(const QJsonObject &jsonObject) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:273:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QJsonObject&[m[Kâ€™
  273 |     QVariant([01;36m[Kconst QJsonObject &jsonObject[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:272:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QJsonArray&)[m[Kâ€™
  272 |     [01;36m[KQVariant[m[K(const QJsonArray &jsonArray) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:272:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QJsonArray&[m[Kâ€™
  272 |     QVariant([01;36m[Kconst QJsonArray &jsonArray[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:271:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QHash<QString, QVariant>&)[m[Kâ€™
  271 |     [01;36m[KQVariant[m[K(const QHash<QString, QVariant> &hash) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:271:46:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QHash<QString, QVariant>&[m[Kâ€™
  271 |     QVariant([01;36m[Kconst QHash<QString, QVariant> &hash[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:270:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QDateTime&)[m[Kâ€™
  270 |     [01;36m[KQVariant[m[K(const QDateTime &datetime) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:270:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QDateTime&[m[Kâ€™
  270 |     QVariant([01;36m[Kconst QDateTime &datetime[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:269:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QByteArray&)[m[Kâ€™
  269 |     [01;36m[KQVariant[m[K(const QByteArray &bytearray) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:269:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QByteArray&[m[Kâ€™
  269 |     QVariant([01;36m[Kconst QByteArray &bytearray[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:267:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QBitArray&)[m[Kâ€™
  267 |     [01;36m[KQVariant[m[K(const QBitArray &bitarray) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:267:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QBitArray&[m[Kâ€™
  267 |     QVariant([01;36m[Kconst QBitArray &bitarray[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:265:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QTime)[m[Kâ€™
  265 |     [01;36m[KQVariant[m[K(QTime time) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:265:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQTime[m[Kâ€™
  265 |     QVariant([01;36m[KQTime time[m[K) noexcept;
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:264:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QDate)[m[Kâ€™
  264 |     [01;36m[KQVariant[m[K(QDate date) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:264:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQDate[m[Kâ€™
  264 |     QVariant([01;36m[KQDate date[m[K) noexcept;
      |              [01;36m[K~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:263:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QChar)[m[Kâ€™
  263 |     [01;36m[KQVariant[m[K(QChar qchar) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:263:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQChar[m[Kâ€™
  263 |     QVariant([01;36m[KQChar qchar[m[K) noexcept;
      |              [01;36m[K~~~~~~^~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:260:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(float)[m[Kâ€™
  260 |     [01;36m[KQVariant[m[K(float f) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:260:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  260 |     QVariant([01;36m[Kfloat f[m[K) noexcept;
      |              [01;36m[K~~~~~~^[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:259:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(double)[m[Kâ€™
  259 |     [01;36m[KQVariant[m[K(double d) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:259:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  259 |     QVariant([01;36m[Kdouble d[m[K) noexcept;
      |              [01;36m[K~~~~~~~^[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:258:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(bool)[m[Kâ€™
  258 |     [01;36m[KQVariant[m[K(bool b) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:258:19:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  258 |     QVariant([01;36m[Kbool b[m[K) noexcept;
      |              [01;36m[K~~~~~^[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:257:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(qulonglong)[m[Kâ€™
  257 |     [01;36m[KQVariant[m[K(qulonglong ull) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:257:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kqulonglong[m[Kâ€™ {aka â€˜[01m[Klong long unsigned int[m[Kâ€™}
  257 |     QVariant([01;36m[Kqulonglong ull[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~~^~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:256:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(qlonglong)[m[Kâ€™
  256 |     [01;36m[KQVariant[m[K(qlonglong ll) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:256:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kqlonglong[m[Kâ€™ {aka â€˜[01m[Klong long int[m[Kâ€™}
  256 |     QVariant([01;36m[Kqlonglong ll[m[K) noexcept;
      |              [01;36m[K~~~~~~~~~~^~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:255:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(uint)[m[Kâ€™
  255 |     [01;36m[KQVariant[m[K(uint ui) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:255:19:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kuint[m[Kâ€™ {aka â€˜[01m[Kunsigned int[m[Kâ€™}
  255 |     QVariant([01;36m[Kuint ui[m[K) noexcept;
      |              [01;36m[K~~~~~^~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:254:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(int)[m[Kâ€™
  254 |     [01;36m[KQVariant[m[K(int i) noexcept;
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:254:18:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  254 |     QVariant([01;36m[Kint i[m[K) noexcept;
      |              [01;36m[K~~~~^[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:220:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(const QVariant&)[m[Kâ€™
  220 |     [01;36m[KQVariant[m[K(const QVariant &other);
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:220:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst QVariant&[m[Kâ€™
  220 |     QVariant([01;36m[Kconst QVariant &other[m[K);
      |              [01;36m[K~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:219:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant(QMetaType, const void*)[m[Kâ€™
  219 |     explicit [01;36m[KQVariant[m[K(QMetaType type, const void *copy = nullptr);
      |              [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:219:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd_msgs::msg::Int32[m[Kâ€™ {aka â€˜[01m[Kstd_msgs::msg::Int32_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[KQMetaType[m[Kâ€™
  219 |     explicit QVariant([01;36m[KQMetaType type[m[K, const void *copy = nullptr);
      |                       [01;36m[K~~~~~~~~~~^~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KQVariant::QVariant()[m[Kâ€™
  217 |     [01;36m[KQVariant[m[K() noexcept : d() {}
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qvariant.h:217:5:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:7[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:36:70:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™})
  394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
      |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qtypeinfo.h:11[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qglobal.h:47[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qtguiglobal.h:7[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qguiapplication.h:7[m[K,
                 from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/QGuiApplication:1[m[K,
                 from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:1[m[K:
[01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:36:70:[m[K   required from here
[01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
      |               [01;31m[K^~~~~~~~~~~~~~~[m[K
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:36:70:[m[K   required from here
[01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
 1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
 1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
      |                [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, std::_Bind<void (*(std::_Placeholder<1>, QObject*))(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
 1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
      |                          [01;36m[K^~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/src/main.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/main.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
