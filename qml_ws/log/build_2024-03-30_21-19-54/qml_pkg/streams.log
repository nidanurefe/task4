[0.027s] Invoking command in '/home/nida/Desktop/qml_ws/build/qml_pkg': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/nida/Desktop/ROV/task2_ws/install/task2_pkg:/home/nida/ros2_humble/install/rqt_bag_plugins:/home/nida/ros2_humble/install/rqt_bag:/home/nida/ros2_humble/install/ros2bag:/home/nida/ros2_humble/install/tracetools_test:/home/nida/ros2_humble/install/tracetools_launch:/home/nida/ros2_humble/install/topic_monitor:/home/nida/ros2_humble/install/tf2_tools:/home/nida/ros2_humble/install/examples_tf2_py:/home/nida/ros2_humble/install/tf2_ros_py:/home/nida/ros2_humble/install/sros2:/home/nida/ros2_humble/install/rqt_topic:/home/nida/ros2_humble/install/rqt_srv:/home/nida/ros2_humble/install/rqt_shell:/home/nida/ros2_humble/install/rqt_service_caller:/home/nida/ros2_humble/install/rqt_reconfigure:/home/nida/ros2_humble/install/rqt_py_console:/home/nida/ros2_humble/install/rqt_publisher:/home/nida/ros2_humble/install/rqt_plot:/home/nida/ros2_humble/install/rqt_action:/home/nida/ros2_humble/install/rqt_msg:/home/nida/ros2_humble/install/rqt_console:/home/nida/ros2_humble/install/rqt:/home/nida/ros2_humble/install/rqt_graph:/home/nida/ros2_humble/install/rqt_gui_py:/home/nida/ros2_humble/install/rqt_gui:/home/nida/ros2_humble/install/ros2trace:/home/nida/ros2_humble/install/ros2topic:/home/nida/ros2_humble/install/ros2test:/home/nida/ros2_humble/install/ros2component:/home/nida/ros2_humble/install/ros2param:/home/nida/ros2_humble/install/ros2lifecycle:/home/nida/ros2_humble/install/ros2service:/home/nida/ros2_humble/install/ros2run:/home/nida/ros2_humble/install/ros2launch:/home/nida/ros2_humble/install/ros2pkg:/home/nida/ros2_humble/install/ros2node:/home/nida/ros2_humble/install/ros2multicast:/home/nida/ros2_humble/install/ros2interface:/home/nida/ros2_humble/install/ros2doctor:/home/nida/ros2_humble/install/ros2action:/home/nida/ros2_humble/install/ros2cli:/home/nida/ros2_humble/install/quality_of_service_demo_py:/home/nida/ros2_humble/install/lifecycle_py:/home/nida/ros2_humble/install/launch_testing_ros:/home/nida/ros2_humble/install/launch_ros:/home/nida/ros2_humble/install/examples_rclpy_pointcloud_publisher:/home/nida/ros2_humble/install/examples_rclpy_minimal_subscriber:/home/nida/ros2_humble/install/examples_rclpy_minimal_service:/home/nida/ros2_humble/install/examples_rclpy_minimal_publisher:/home/nida/ros2_humble/install/examples_rclpy_minimal_client:/home/nida/ros2_humble/install/examples_rclpy_minimal_action_server:/home/nida/ros2_humble/install/examples_rclpy_minimal_action_client:/home/nida/ros2_humble/install/examples_rclpy_guard_conditions:/home/nida/ros2_humble/install/examples_rclpy_executors:/home/nida/ros2_humble/install/demo_nodes_py:/home/nida/ros2_humble/install/action_tutorials_py:/home/nida/ros2_humble/install/ament_uncrustify:/home/nida/ros2_humble/install/tracetools_trace:/home/nida/ros2_humble/install/tracetools_read:/home/nida/ros2_humble/install/test_tracetools_launch:/home/nida/ros2_humble/install/test_launch_ros:/home/nida/ros2_humble/install/sensor_msgs_py:/home/nida/ros2_humble/install/rpyutils:/home/nida/ros2_humble/install/rosidl_runtime_py:/home/nida/ros2_humble/install/rosidl_cli:/home/nida/ros2_humble/install/launch_pytest:/home/nida/ros2_humble/install/launch_testing:/home/nida/ros2_humble/install/launch_yaml:/home/nida/ros2_humble/install/launch_xml:/home/nida/ros2_humble/install/launch:/home/nida/ros2_humble/install/osrf_pycommon:/home/nida/ros2_humble/install/launch_testing_examples:/home/nida/ros2_humble/install/domain_coordinator:/home/nida/ros2_humble/install/ament_xmllint:/home/nida/ros2_humble/install/ament_pyflakes:/home/nida/ros2_humble/install/ament_pycodestyle:/home/nida/ros2_humble/install/ament_pep257:/home/nida/ros2_humble/install/ament_pclint:/home/nida/ros2_humble/install/ament_package:/home/nida/ros2_humble/install/ament_mypy:/home/nida/ros2_humble/install/ament_lint_cmake:/home/nida/ros2_humble/install/ament_flake8:/home/nida/ros2_humble/install/ament_copyright:/home/nida/ros2_humble/install/ament_lint:/home/nida/ros2_humble/install/ament_index_python:/home/nida/ros2_humble/install/ament_cpplint:/home/nida/ros2_humble/install/ament_cppcheck:/home/nida/ros2_humble/install/ament_clang_tidy:/home/nida/ros2_humble/install/ament_clang_format:/opt/ros/humble /home/nida/.local/bin/cmake --build /home/nida/Desktop/qml_ws/build/qml_pkg -- -j8 -l8
[0.154s] [ 25%] [32mBuilding CXX object CMakeFiles/publisher_node.dir/src/publisher_node.cpp.o[0m
[0.159s] [ 50%] [32mBuilding CXX object CMakeFiles/main.dir/src/main.cpp.o[0m
[0.288s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/publisher_node.cpp:2:10:[m[K [01;31m[Kfatal error: [m[Kexample_interfaces/msg/string.hpp: No such file or directory
[0.288s]     2 | #include [01;31m[K"example_interfaces/msg/string.hpp"[m[K  // Fixed header include
[0.288s]       |          [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[0.288s] compilation terminated.
[0.290s] gmake[2]: *** [CMakeFiles/publisher_node.dir/build.make:76: CMakeFiles/publisher_node.dir/src/publisher_node.cpp.o] Error 1
[0.290s] gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/publisher_node.dir/all] Error 2
[0.290s] gmake[1]: *** Waiting for unfinished jobs....
[2.114s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[2.114s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:36:14:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[KrootObject[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;[m[K]
[2.114s]    36 |     QObject *[01;35m[KrootObject[m[K = engine.rootObjects().first();
[2.114s]       |              [01;35m[K^~~~~~~~~~[m[K
[2.671s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.671s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.671s]                  from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:7[m[K:
[2.671s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.672s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:37:70:[m[K   required from here
[2.672s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*), void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™})
[2.672s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[2.672s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.672s] In file included from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qtypeinfo.h:11[m[K,
[2.672s]                  from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtCore/qglobal.h:47[m[K,
[2.672s]                  from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qtguiglobal.h:7[m[K,
[2.672s]                  from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/qguiapplication.h:7[m[K,
[2.672s]                  from [01m[K/home/nida/Qt/6.6.3/gcc_64/include/QtGui/QGuiApplication:1[m[K,
[2.672s]                  from [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:1[m[K:
[2.672s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.672s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[2.673s]       |         [01;36m[K^~~~~~~~[m[K
[2.673s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[2.673s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[2.673s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:37:70:[m[K   required from here
[2.673s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[2.673s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[2.673s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[2.673s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); MessageT = std_msgs::msg::Int32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32_<std::allocator<void> >; CallbackT = void (&)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*); AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void>, std_msgs::msg::Int32_<std::allocator<void> >, std_msgs::msg::Int32_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[2.673s] [01m[K/home/nida/Desktop/qml_ws/src/qml_pkg/src/main.cpp:37:70:[m[K   required from here
[2.673s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.673s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[2.673s]       |                [01;36m[K^~~~~~~~[m[K
[2.673s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*), void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[2.673s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[2.674s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[2.674s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.674s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[2.674s]       |                [01;36m[K^~~~~~~~[m[K
[2.674s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Int32_<std::allocator<void> >, void (*)(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*), void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, QObject*)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Int32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Int32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Int32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Int32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[2.674s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[2.674s]       |                          [01;36m[K^~~~~~~~~[m[K
[3.713s] gmake[2]: *** [CMakeFiles/main.dir/build.make:76: CMakeFiles/main.dir/src/main.cpp.o] Error 1
[3.713s] gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/main.dir/all] Error 2
[3.714s] gmake: *** [Makefile:146: all] Error 2
[3.718s] Invoked command in '/home/nida/Desktop/qml_ws/build/qml_pkg' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/nida/Desktop/ROV/task2_ws/install/task2_pkg:/home/nida/ros2_humble/install/rqt_bag_plugins:/home/nida/ros2_humble/install/rqt_bag:/home/nida/ros2_humble/install/ros2bag:/home/nida/ros2_humble/install/tracetools_test:/home/nida/ros2_humble/install/tracetools_launch:/home/nida/ros2_humble/install/topic_monitor:/home/nida/ros2_humble/install/tf2_tools:/home/nida/ros2_humble/install/examples_tf2_py:/home/nida/ros2_humble/install/tf2_ros_py:/home/nida/ros2_humble/install/sros2:/home/nida/ros2_humble/install/rqt_topic:/home/nida/ros2_humble/install/rqt_srv:/home/nida/ros2_humble/install/rqt_shell:/home/nida/ros2_humble/install/rqt_service_caller:/home/nida/ros2_humble/install/rqt_reconfigure:/home/nida/ros2_humble/install/rqt_py_console:/home/nida/ros2_humble/install/rqt_publisher:/home/nida/ros2_humble/install/rqt_plot:/home/nida/ros2_humble/install/rqt_action:/home/nida/ros2_humble/install/rqt_msg:/home/nida/ros2_humble/install/rqt_console:/home/nida/ros2_humble/install/rqt:/home/nida/ros2_humble/install/rqt_graph:/home/nida/ros2_humble/install/rqt_gui_py:/home/nida/ros2_humble/install/rqt_gui:/home/nida/ros2_humble/install/ros2trace:/home/nida/ros2_humble/install/ros2topic:/home/nida/ros2_humble/install/ros2test:/home/nida/ros2_humble/install/ros2component:/home/nida/ros2_humble/install/ros2param:/home/nida/ros2_humble/install/ros2lifecycle:/home/nida/ros2_humble/install/ros2service:/home/nida/ros2_humble/install/ros2run:/home/nida/ros2_humble/install/ros2launch:/home/nida/ros2_humble/install/ros2pkg:/home/nida/ros2_humble/install/ros2node:/home/nida/ros2_humble/install/ros2multicast:/home/nida/ros2_humble/install/ros2interface:/home/nida/ros2_humble/install/ros2doctor:/home/nida/ros2_humble/install/ros2action:/home/nida/ros2_humble/install/ros2cli:/home/nida/ros2_humble/install/quality_of_service_demo_py:/home/nida/ros2_humble/install/lifecycle_py:/home/nida/ros2_humble/install/launch_testing_ros:/home/nida/ros2_humble/install/launch_ros:/home/nida/ros2_humble/install/examples_rclpy_pointcloud_publisher:/home/nida/ros2_humble/install/examples_rclpy_minimal_subscriber:/home/nida/ros2_humble/install/examples_rclpy_minimal_service:/home/nida/ros2_humble/install/examples_rclpy_minimal_publisher:/home/nida/ros2_humble/install/examples_rclpy_minimal_client:/home/nida/ros2_humble/install/examples_rclpy_minimal_action_server:/home/nida/ros2_humble/install/examples_rclpy_minimal_action_client:/home/nida/ros2_humble/install/examples_rclpy_guard_conditions:/home/nida/ros2_humble/install/examples_rclpy_executors:/home/nida/ros2_humble/install/demo_nodes_py:/home/nida/ros2_humble/install/action_tutorials_py:/home/nida/ros2_humble/install/ament_uncrustify:/home/nida/ros2_humble/install/tracetools_trace:/home/nida/ros2_humble/install/tracetools_read:/home/nida/ros2_humble/install/test_tracetools_launch:/home/nida/ros2_humble/install/test_launch_ros:/home/nida/ros2_humble/install/sensor_msgs_py:/home/nida/ros2_humble/install/rpyutils:/home/nida/ros2_humble/install/rosidl_runtime_py:/home/nida/ros2_humble/install/rosidl_cli:/home/nida/ros2_humble/install/launch_pytest:/home/nida/ros2_humble/install/launch_testing:/home/nida/ros2_humble/install/launch_yaml:/home/nida/ros2_humble/install/launch_xml:/home/nida/ros2_humble/install/launch:/home/nida/ros2_humble/install/osrf_pycommon:/home/nida/ros2_humble/install/launch_testing_examples:/home/nida/ros2_humble/install/domain_coordinator:/home/nida/ros2_humble/install/ament_xmllint:/home/nida/ros2_humble/install/ament_pyflakes:/home/nida/ros2_humble/install/ament_pycodestyle:/home/nida/ros2_humble/install/ament_pep257:/home/nida/ros2_humble/install/ament_pclint:/home/nida/ros2_humble/install/ament_package:/home/nida/ros2_humble/install/ament_mypy:/home/nida/ros2_humble/install/ament_lint_cmake:/home/nida/ros2_humble/install/ament_flake8:/home/nida/ros2_humble/install/ament_copyright:/home/nida/ros2_humble/install/ament_lint:/home/nida/ros2_humble/install/ament_index_python:/home/nida/ros2_humble/install/ament_cpplint:/home/nida/ros2_humble/install/ament_cppcheck:/home/nida/ros2_humble/install/ament_clang_tidy:/home/nida/ros2_humble/install/ament_clang_format:/opt/ros/humble /home/nida/.local/bin/cmake --build /home/nida/Desktop/qml_ws/build/qml_pkg -- -j8 -l8
